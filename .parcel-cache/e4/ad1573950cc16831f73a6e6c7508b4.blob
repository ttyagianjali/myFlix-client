var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MainView", ()=>MainView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _registerView = require("../register-view/register-view");
var _loginView = require("../login-view/login-view");
// import { MovieCard } from '../movie-card/movie-card';
var _movieView = require("../movie-view/movie-view");
var _directorView = require("../director-view/director-view");
var _favoritesView = require("../favorites-view/favorites-view");
var _genreView = require("../genre-view/genre-view");
var _reactBootstrap = require("react-bootstrap");
var _reactRouterDom = require("react-router-dom");
var _reactRedux = require("react-redux");
var _profileView = require("../profile-view/profile-view");
var _row = require("react-bootstrap/Row");
var _rowDefault = parcelHelpers.interopDefault(_row);
var _col = require("react-bootstrap/Col");
var _colDefault = parcelHelpers.interopDefault(_col);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _actions = require("../../actions/actions");
var _moviesList = require("../movies-list/movies-list");
var _moviesListDefault = parcelHelpers.interopDefault(_moviesList);
class MainView extends _reactDefault.default.Component {
    constructor(){
        super();
        this.state = {
            movies: [],
            selectedMovie: null,
            user: null
        };
    }
    componentDidMount() {
        let accessToken = localStorage.getItem('token');
        if (accessToken !== null) {
            this.setState({
                user: localStorage.getItem('user')
            });
            this.getMovies(accessToken);
        }
    }
    onLoggedIn(authData) {
        this.props.setUser(authData);
        this.setState({
            user: authData.user
        });
        console.log('onLoggedIn reached', authData);
        localStorage.setItem('token', authData.token);
        localStorage.setItem('user', authData.user.Username);
        this.getMovies(authData.token);
        this.getMovies(authData.token);
    }
    getMovies(token) {
        _axiosDefault.default.get('https://my-flix-007.herokuapp.com/movies', {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            this.props.setMovies(response.data);
        }).catch(function(error) {
            console.log(error);
        });
    }
    getUser(token) {
        const user = localStorage.getItem("user");
        _axiosDefault.default.get('https://my-flix-007.herokuapp.com/users/' + user, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            this.props.setUser(response.data);
            this.setState({
                user: response.data
            });
            console.log('getUser response', response.data);
        }).catch(function(error) {
            console.log(error);
        });
        console.log('getUser reached');
    }
    onLoggedOut() {
        localStorage.removeItem('token');
        localStorage.removeItem('user');
        this.setState({
            user: null
        });
    }
    render() {
        let { movies  } = this.props;
        let { user  } = this.state;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 103
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
            className: "main-view justify-content-md-center",
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 104
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Container, {
            className: "navbarContainer",
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 105
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar, {
            bg: "dark",
            variant: "dark",
            fixed: "top",
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 106
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar.Brand, {
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 107
            },
            __self: this
        }, "MyFlix App"), /*#__PURE__*/ _reactDefault.default.createElement("ul", {
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 108
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/`,
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 109
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            variant: "link",
            className: "navbar-link text-light",
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 110
            },
            __self: this
        }, "Movies")), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/users/:Username`,
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 112
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            variant: "link",
            className: "navbar-link text-light",
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 113
            },
            __self: this
        }, "Profile")), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/users/:Username/Movies/:MovieID`,
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 115
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            variant: "link",
            className: "navbar-link text-light",
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 116
            },
            __self: this
        })), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/`,
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 118
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            variant: "link",
            className: "navbar-link text-light",
            onClick: ()=>this.onLoggedOut()
            ,
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 119
            },
            __self: this
        }, "Logout"))))), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 4
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_moviesListDefault.default, {
                    movies: movies
                }));
            },
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 126
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/register",
            render: ()=>{
                if (user) return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Redirect, {
                    to: "/"
                }));
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 4
                }, /*#__PURE__*/ _reactDefault.default.createElement(_registerView.RegisterView, null)));
            },
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 133
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/movies/:movieId",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 4
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m._id === match.params.movieId
                    ),
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 142
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/directors/:name",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 4
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_directorView.DirectorView, {
                    director: movies.find((m)=>m.Director.Name === match.params.name
                    ).Director,
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 152
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/genres/:name",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 4
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_genreView.GenreView, {
                    genre: movies.find((m)=>m.Genre.Name === match.params.name
                    ).Genre,
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 163
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/users/:Username",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 4
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_profileView.ProfileView, {
                    user: user,
                    onBackClick: ()=>history.goBack()
                })), /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_favoritesView.FavoritesView, {
                    user: user,
                    movies: movies
                }))));
            },
            __source: {
                fileName: "/Users/anjalityagi/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 174
            },
            __self: this
        }))));
    }
}
let mapStateToProps = (state)=>{
    return {
        user: state.user,
        movies: state.movies
    };
};
exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actions.setMovies,
    setUser: _actions.setUser
})(MainView);

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}